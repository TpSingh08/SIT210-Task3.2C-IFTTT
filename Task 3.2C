// hp_BH1750 - Version: Latest 
#include <hp_BH1750.h>
hp_BH1750 sensor;

/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled 2"
  https://create.arduino.cc/cloud/things/eca4a0ac-1721-42ea-a5f5-1f37f424fe18 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudLuminance lightSensor;
  bool sunlight;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

// Define LED pin
int LED = 2;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
  
  // set the LED pin as output
  pinMode(LED, OUTPUT);
  
  // set the address and initialize the sensor
  sensor.begin(BH1750_TO_GROUND);
  
  // start the first measurement
  sensor.start();
  
  Serial.println("----START----");

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  onLightSensorChange();
  
}



/*
  Since Sunlight is READ_WRITE variable, onSunlightChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onSunlightChange()  {
  // Add your code here to act upon Sunlight change
  // turn LED on for 2 seconds
  digitalWrite(LED, HIGH);
  delay(2000);
  // turn LED off for 2 sec
  digitalWrite(LED, LOW);
  delay(2000);
}

/*
  Since LightSensor is READ_WRITE variable, onLightSensorChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLightSensorChange()  {
  // Add your code here to act upon LightSensor change
  if(sensor.hasValue())
  {
    // input light intensity
    lightSensor = sensor.getLux();
    
    // if light intensity is greater than 400, blonk led
    if(lightSensor > 400)
    {
      // terraium is exposed to sunlight
      sunlight = true;
      onSunlightChange();
      
      // print light intensity and sunlight value
      Serial.print("Light intensity: ");
      Serial.println(lightSensor);
      Serial.println(", Sunlight: ON ");
      
    }
    
    // else turn led off
    else
    {
      // terrarium is not exposed to sunlight
      sunlight = false;
      digitalWrite(LED, LOW);
      // print light intensity and sunlight value
      Serial.print("Light intensity: ");
      Serial.println(lightSensor);
      Serial.println(", Sunlight: OFF ");
    }
    
    delay(5000);
    // start next measurement
    sensor.start();
  }
}
